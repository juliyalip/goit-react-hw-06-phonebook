{"version":3,"sources":["component/form.module.css","redux/contact-types.js","component/Contacts.js","redux/contact-action.js","component/Filter.js","component/Form.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["module","exports","types","ADD","DELETE","CHANGE_FILTER","CHECK_UNIGUE","connect","state","filter","contacts","normalizeFilter","toLowerCase","persons","contact","name","includes","dispatch","onDelete","id","type","payload","TransitionGroup","component","map","number","CSSTransition","timeout","classNames","className","onClick","value","onChange","e","target","placeholder","Form","handleChange","currentTarget","setState","handleFormSubmit","preventDefault","onAdd","props","validateForm","shortid","generate","reset","some","toast","error","alert","this","onSubmit","s","form","input","Component","newContact","actions","App","in","appear","unmountOnExit","autoClose","position","combineReducers","store","createStore","reduser","composeWithDevTools","console","log","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,sB,qLCUrCC,EAFD,CAAEC,IARJ,cAQSC,OANN,iBAMcC,cAJP,uBAIsBC,aAFvB,sB,+BCwDNC,eAlBS,SAAAC,GAAU,IAExBC,EAAqBD,EAArBC,OAAQC,EAAaF,EAAbE,SACVC,EAAkBF,EAAOG,cAM/B,MAAO,CACPC,QALwBH,EAASD,QAAO,SAACK,GAAD,OACtCA,EAAQC,KAAKH,cAAcI,SAASL,UAQb,SAAAM,GAAQ,MAAK,CACxCC,SAAU,SAACC,GAAD,OAAQF,EC7CyB,CACvCG,KAAMlB,EAAME,OACZiB,QD2C6CF,QAGlCZ,EArDE,SAAC,GAAD,IAAGM,EAAH,EAAGA,QAASK,EAAZ,EAAYA,SAAZ,OACf,cAACI,EAAA,EAAD,CAAiBC,UAAU,KAA3B,SAEGV,EAAQW,KAAI,gBAAGL,EAAH,EAAGA,GAAIJ,EAAP,EAAOA,KAAMU,EAAb,EAAaA,OAAb,OACX,cAACC,EAAA,EAAD,CAAwBC,QAAS,IAAKC,WAAW,cAAjD,SAEC,qBAAKC,UAAU,cAAcV,GAAIA,EAAjC,UACC,8BACGJ,EADH,IACUU,KAEV,wBACEL,KAAK,SACLU,QAAS,WACPZ,EAASC,IAHb,wBANkBA,WEkBXZ,eARS,SAAAC,GAAK,MAAK,CAClCuB,MAAOvB,EAAMC,WAGc,SAAAQ,GAAQ,MAAK,CACrCe,SAAU,SAAAC,GAAC,OAAIhB,GDRWF,ECQoBkB,EAAEC,OAAOH,MDRpB,CAClCX,KAAMlB,EAAMG,cACZgB,QAASN,KAFgB,IAAAA,MCWdR,EA3BA,SAAC,GAAD,IAAGwB,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACb,0DAEE,uBACEZ,KAAK,OACLL,KAAK,SACLgB,MAAOA,EACPC,SAAUA,EACVG,YAAY,oB,iCCFXC,G,kNACL5B,MAAQ,CACNO,KAAM,GACNU,OAAQ,I,EAWVY,aAAe,SAACJ,GAAO,IAAD,EACIA,EAAEK,cAAlBvB,EADY,EACZA,KAAMgB,EADM,EACNA,MACd,EAAKQ,SAAL,eACGxB,EAAOgB,K,EAIZS,iBAAmB,SAACP,GAClBA,EAAEQ,iBADsB,MAEC,EAAKjC,MAAtBO,EAFgB,EAEhBA,KAAMU,EAFU,EAEVA,OACNiB,EAAU,EAAKC,MAAfD,MACY,EAAKE,iBAEzBF,EAAM,CAAEvB,GAAI0B,IAAQC,WAAY/B,OAAMU,WACtC,EAAKsB,U,EAGPH,aAAe,WAAO,IAAD,EACM,EAAKpC,MAAtBO,EADW,EACXA,KAAMU,EADK,EACLA,OACX,OAAKV,GAASU,GAIA,EAAKkB,MAAMjC,SACfsC,MAAK,SAAAlC,GAAO,OAAIA,EAAQC,OAASA,MACzCkC,IAAMC,MAAM,2FALfC,MAAM,mBACC,I,EAUXJ,MAAQ,WACN,EAAKR,SAAS,CACZxB,KAAM,GACNU,OAAQ,M,4CAQZ,WAAU,IAAD,EACkB2B,KAAK5C,MAAtBO,EADD,EACCA,KAAMU,EADP,EACOA,OAGd,OACE,uBAAM4B,SAAUD,KAAKZ,iBAAkBX,UAAWyB,IAAEC,KAApD,UACE,wBAAO1B,UAAWyB,IAAEE,MAApB,iBAEE,uBACEpC,KAAK,OACLL,KAAK,OACLgB,MAAOhB,EACPoB,YAAY,aACZH,SAAUoB,KAAKf,kBAGnB,wBAAOR,UAAWyB,IAAEE,MAApB,mBAEE,uBACEpC,KAAK,OACLL,KAAK,SACLgB,MAAON,EACPU,YAAY,eACZH,SAAUoB,KAAKf,kBAGnB,wBAAQjB,KAAK,SAAb,gC,GAlFYqC,cAoGLlD,eAZS,SAAAC,GAAK,MAAK,CAChCE,SAAUF,EAAME,aAIS,SAAAO,GAAQ,MAAK,CACtCyB,MAAO,SAACgB,GAAD,OAAgBzC,EFpGC,SAAC,GAAD,IAAGF,EAAH,EAAGA,KAAMU,EAAT,EAASA,OAAT,MAAuB,CAC7CL,KAAMlB,EAAMC,IACZkB,QAAS,CACLF,GAAI0B,IAAQC,WACZ/B,OACAU,WE+F0BkC,CAAmBD,QAMtCnD,CAA+C6B,GC/FzCwB,E,4JA+BnB,WAEE,OACE,mCACE,sBAAK/B,UAAU,YAAf,UAEA,cAACH,EAAA,EAAD,CACEmC,IAAI,EACJC,QAAQ,EACRnC,QAAS,IACTC,WAAW,QACXmC,eAAa,EALf,SAOE,oBAAIlC,UAAU,QAAd,yBAIA,cAAC,EAAD,IAEA,0CAII,cAAC,EAAD,IAEF,cAAC,EAAD,IAMF,cAAC,IAAD,CAAgBmC,UAAW,IAAMC,SAAS,sB,GA9DnBR,a,uBCwBlBS,4BAAgB,CAC3BxD,SAtCoB,WAKE,IALDF,EAKA,uDALQ,CAC7B,CAAEW,GAAI,OAAQJ,KAAM,gBAAiBU,OAAQ,aAC7C,CAAEN,GAAI,OAAQJ,KAAM,iBAAkBU,OAAQ,aAC9C,CAAEN,GAAI,OAAQJ,KAAM,gBAAiBU,OAAQ,aAC7C,CAAEN,GAAI,OAAQJ,KAAM,iBAAkBU,OAAQ,cACzB,yCAApBL,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAEP,OAAQD,GAEJ,KAAKlB,EAAMC,IACP,MAAM,GAAN,mBAAWK,GAAX,CAAkBa,IAEtB,KAAKnB,EAAME,OACP,OAAOI,EAAMC,QAAO,SAAAK,GAAO,OAAIA,EAAQK,KAAOE,KAIhD,QAAS,OAAOb,IAsBtBC,OAdkB,WAAkC,IAAjCD,EAAgC,uDAAxB,GAAwB,yCAAnBY,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,QACtC,OAAQD,GACJ,KAAKlB,EAAMG,cAEP,OAAOgB,EAGT,QAAS,OAAOb,MCzBX2D,EAJDC,sBAAYC,EAASC,iCCGnCC,QAAQC,IAAIL,EAAMM,YAElBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUT,MAAOA,EAAjB,SACE,cAAC,EAAD,QAIJU,SAASC,eAAe,W","file":"static/js/main.ac9d51cf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__2AAak\",\"input\":\"form_input__1yhFO\"};","\r\nconst ADD = 'contact/add';\r\n\r\nconst DELETE = 'contact/delete';\r\n\r\nconst CHANGE_FILTER = 'contact/changeFilter';\r\n\r\nconst CHECK_UNIGUE = 'contact/chekUnigue'\r\n\r\nconst types = { ADD, DELETE, CHANGE_FILTER, CHECK_UNIGUE }\r\n\r\nexport default types\r\n\r\n\r\n","import PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from '../redux/contact-action'\r\n\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\n\r\nimport  \"./contact.css\";\r\n\r\n\r\n\r\nconst Contacts = ({ persons, onDelete }) => (\r\n  <TransitionGroup component=\"ul\">\r\n     \r\n    {persons.map(({ id, name, number }) => (\r\n      <CSSTransition key={id} timeout={250} classNames=\"contactItem\">\r\n        \r\n       <li  className=\"contactItem\" id={id}>\r\n        <p>\r\n          {name} {number}\r\n        </p>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            onDelete(id);\r\n          }}\r\n        >\r\n          Delete\r\n        </button>\r\n        </li>\r\n        </CSSTransition>\r\n   \r\n    ))}\r\n\r\n </TransitionGroup>\r\n\r\n);\r\n\r\nContacts.propTypes = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  \r\n  const { filter, contacts } = state;\r\n  const normalizeFilter = filter.toLowerCase();\r\n\r\n  const visibleContacts = contacts.filter((contact) => \r\n    contact.name.toLowerCase().includes(normalizeFilter),\r\n  )\r\n  \r\n  return {\r\n  persons: visibleContacts}}\r\n  \r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\nonDelete: (id) => dispatch(actions.deleteContact(id))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps )(Contacts);","import shortid from \"shortid\";\r\nimport types from './contact-types'\r\n\r\n\r\n\r\nexport const addContact = ({ name, number }) => ({\r\n    type: types.ADD,\r\n    payload: {\r\n        id: shortid.generate(),\r\n        name,\r\n        number\r\n\r\n    }\r\n});\r\n\r\nexport const deleteContact = contactId => ({\r\n    type: types.DELETE,\r\n    payload: contactId\r\n});\r\n\r\n\r\nexport const changleFilter = name => ({\r\n    type: types.CHANGE_FILTER,\r\n    payload: name\r\n})\r\n\r\nexport const chekUnigue = unicueName =>( {\r\n  type: types.CHECK_UNIGUE,\r\n    payload: unicueName\r\n} )\r\n\r\n    \r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../redux/contact-action'\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    Find contacts by name\r\n    <input\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      value={value}\r\n      onChange={onChange}\r\n      placeholder=\"find name\"\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nconst mapStateToProps = state =>( {\r\nvalue: state.filter\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   onChange: e => dispatch(actions.changleFilter(e.target.value))\r\n\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport shortid from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as actions from '../redux/contact-action'\r\n\r\nimport s from \"./form.module.css\";\r\n\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n class Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    \r\n  };\r\n\r\n  static propTypes = {\r\n    handleChange: PropTypes.func,\r\n    handleFormSubmit: PropTypes.func,\r\n    validateForm: PropTypes.func,\r\n    reset: PropTypes.func,\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const { onAdd } = this.props;\r\n   const isValedeForm = this.validateForm();\r\n   if (!isValedeForm) return;\r\n    onAdd({ id: shortid.generate(), name, number });\r\n    this.reset();\r\n  };\r\n\r\n  validateForm = () => {\r\n    const { name, number } = this.state;\r\n       if (!name || !number) {\r\n      alert(\"filed is empti\");\r\n      return false;\r\n    }\r\n    const contacts = this.props.contacts;\r\n    if (contacts.some(contact => contact.name === name)) {\r\n  return toast.error(\"Контакт уже есть\")\r\n}\r\n    return true;\r\n  };\r\n\r\n     \r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n  \r\n    });\r\n   };\r\n   \r\n\r\n\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n \r\n\r\n    return (\r\n      <form onSubmit={this.handleFormSubmit} className={s.form}>\r\n        <label className={s.input}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            placeholder=\"enter name\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={s.input}>\r\n          Number\r\n          <input\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n            placeholder=\"enter number\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts\r\n})\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onAdd: (newContact) => dispatch(actions.addContact(newContact)),\r\n \r\n\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps  )(Form)\r\n\r\n","import { Component } from \"react\";\nimport \"./index.css\";\nimport Contacts from \"./component/Contacts\";\nimport Filter from \"./component/Filter\";\nimport Form from \"./component/Form\";\n\nimport { ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport './component/contact.css'\n\n\n\n\nimport {CSSTransition} from 'react-transition-group'\n\nexport default class App extends Component {\n\n // componentDidMount() {\n //   const contacts = localStorage.getItem(\"contacts\");\n //   const parsedContacts = JSON.parse(contacts);\n //   console.log(parsedContacts);\n //   console.log(\"component App DidMount\");\n //   if (parsedContacts) {\n  //    this.setState({ contacts: parsedContacts });\n  //  }\n // }\n\n // componentDidUpdate(prevProps, prevState) {\n //   console.log(\"app componentDidUpdate\");\n //   if (this.state.contacts !== prevState.contacts) {\n //     console.log(\"obnovilos pole contact\");\n  //    localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n   // }\n // }\n\n\n\n  //handleCheckUnicue = (name) => {\n   // const { contacts } = this.state;\n   // const duplicete = !!contacts.find((contact) => contact.name === name);\n  //  duplicete && toast.error('contact already  exists')\n\n   // return !duplicete;\n  //};\n\n\n  render() {\n\n    return (\n      <>\n        <div className=\"container\">\n\n        <CSSTransition\n          in={true}\n          appear={true}\n          timeout={500}\n          classNames=\"title\"\n          unmountOnExit\n        >\n          <h1 className=\"title\">Phonebook</h1>\n        </CSSTransition>\n        \n        \n          <Form />\n\n          <h2>Contacts</h2>\n      \n\n          {/* <CSSTransition in={this.state.contacts.length > 0 } classNames=\"contactItem\" timeout={250} unmountOnExit>  */}\n              <Filter />\n            \n            <Contacts />\n                    \n   {/* </CSSTransition>   \n       */}\n          \n      \n          <ToastContainer autoClose={3000} position=\"top-left\"/> \n         \n        </div>\n      </>\n    );\n  }\n}","import {combineReducers} from 'redux'\r\nimport types from './contact-types';\r\n\r\nconst contactsReduser = (state = [\r\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n], { type, payload }) => {\r\n    \r\n    switch (type) {\r\n     \r\n        case types.ADD:\r\n            return [...state, payload]\r\n        \r\n        case types.DELETE:\r\n            return state.filter(contact => contact.id !== payload)\r\n        \r\n        \r\n                     \r\n          default: return state;\r\n    }\r\n\r\n  \r\n  \r\n}\r\n \r\n\r\nconst filterReduser = (state = '', {type, payload}) => {\r\n    switch (type) {\r\n        case types.CHANGE_FILTER:\r\n            \r\n            return payload  // вернем новое значение\r\n        \r\n        \r\n          default: return state;\r\n    }\r\n\r\n};\r\n\r\nexport default combineReducers({\r\n    contacts: contactsReduser, //описывается объект state за свойство контакт отвечает contacts\r\n    filter: filterReduser\r\n})","import { createStore } from 'redux';\r\n//import { configureStore } from '@reduxjs/toolkit';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reduser from './reducer'\r\n\r\n\r\nconst store = createStore(reduser, composeWithDevTools())\r\n\r\n\r\n\r\nexport default store\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport {Provider} from 'react-redux'\nimport store from './redux/store';\n\n\nconsole.log(store.getState())\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}